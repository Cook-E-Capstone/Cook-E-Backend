name: Deployment

on:
  push:
    branches:
      - staging

env:
  REGISTRY: ${{ secrets.REGISTRY_URL }}
  IMAGE_NAME: cooke-stg
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE_NAME: cooke-stg
  REGION: asia-southeast2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy Google Cloud Service Account credentials
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > gcp_service_account.json

      - name: Copy .env file
        run: |
          echo "${{ secrets.ENV_STG }}" > .env

      # Build and tag the Docker image
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      # Login to the container registry
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      # Tag the Docker image to the registry
      - name: Tag Docker image
        run: docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Push the Docker image to the registry
      - name: Push Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Deploy the image to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
             --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
             --platform managed \
             --region ${{ env.REGION }} \
             --allow-unauthenticated \
             --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL_STG }}, JWT_SECRET=${{ secrets.JWT_SECRET }}, PROJECT_ID=${{ secrets.PROJECT_ID }}
